#!/bin/bash

##
# name: pre-commit-hook
# author: Axel Martin (for PowerSpikeGG)
# brief: Ensures commit respect PowerSpikeGG policy
#

source "$(dirname "${BASH_SOURCE[0]}")/../lib/bash/bazel.bash"
source "$(dirname "${BASH_SOURCE[0]}")/../lib/bash/logging.bash"
source "$(dirname "${BASH_SOURCE[0]}")/../lib/bash/prompt.bash"

# Rules checking Go code validity
PreCommit::GoChecks () {
    [ -z "$GOPATH" ] && Log::Failure "please install golang on workstation (\$GOPATH missing)"

    # TODO(funkysayu) add go precommits
}


# Rules checking BUILD files validity
PreCommit::BuildChecks () {
    local filepath=$1

    [ -z "$GOPATH" ] && Log::Failure "please install golang on workstation (\$GOPATH missing)"

    if [ ! -x "$GOPATH/bin/buildifier" ]; then
        Log::Notice "buildifier executable not found at '$GOPATH/bin/buildifier'."

        Prompt::YesNoPrompt "Install it?" || Log::Failure "aborting..."

        go install github.com/bazelbuild/buildifier/buildifier
    fi

    output=$("$GOPATH/bin/buildifier" -mode=check $filepath)
    if [ -n "$output" ]; then
        Log::Warning "$output"
        Log::Failure "formatting error in a BUILD file. Aborting..."
    fi
}


main () {
    cd $(bazel info workspace)

    # Ensures every tests affected by modified targets pass
    git diff --name-only --staged HEAD \
        | Bazel::GetAssociatedTests \
        | Bazel::TestTargets || Log::Failure "test failure, aborting commit."

    # Per languages rules
    git diff --name-only --staged HEAD | while read filepath
    do
        case "$filepath" in
            *.go) PreCommit::GoChecks $filepath  || exit 1 ;;
            *BUILD) PreCommit::BuildChecks $filepath || exit 1 ;;
        esac
    done
}


if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi
