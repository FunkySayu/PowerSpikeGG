user nginx;

worker_processes auto;
worker_rlimit_nofile 8192;
daemon off;

events {
  worker_connections 8000;
  multi_accept on;
  use epoll;
}

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

http {
  server_tokens off;
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  charset_types text/xml text/plain text/vnd.wap.wml application/x-javascript application/rss+xml text/css application/javascript application/json;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  keepalive_timeout 20;
  sendfile        on;

  tcp_nopush      on;
  tcp_nodelay     off;

  gzip on;
  gzip_http_version  1.0;
  gzip_comp_level    5;
  gzip_min_length    256;
  gzip_proxied       any;
  gzip_vary          on;
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;

  ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers                "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4";
  ssl_prefer_server_ciphers  on;
  ssl_session_cache    shared:SSL:10m; # a 1mb cache can hold about 4000 sessions, so we can hold 40000 sessions
  ssl_session_timeout  10m;

  server {
    root /var/www;
    index index.html index.htm;

    # Make site accessible from http://localhost/
    server_name localhost;

    # Add 1 day expires header for static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
      expires 1d;
    }

    location / {
      # First attempt to serve request as file, then
      # as directory, then fall back to redirecting to index.html
      try_files $uri $uri/ @root;
    }

    location /api {
      proxy_pass http://server:8080;
    }

    # If nginx can't find a file, fallback to the homepage.
    location @root {
      rewrite .* / redirect;
    }

    include /etc/nginx/basic.conf;
  }

}
